name: Send Onsen Banner Email

on:
  # 매일 00:00 UTC = 09:00 KST
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch: {}

jobs:
  run-and-email:
    runs-on: ubuntu-latest
    env:
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: "465"
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      MAIL_TO:   ${{ secrets.MAIL_TO }}
      MAIL_FROM: ${{ secrets.MAIL_FROM }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests beautifulsoup4 lxml charset-normalizer chardet

      - name: Run banner fetch + send email ([1] + [2])
        run: |
          python - <<'PYCODE'
          import os, re, ssl, smtplib, requests
          from bs4 import BeautifulSoup
          from email.mime.text import MIMEText

          URL = "https://www.onsen.co.nz/experiences/"
          UA  = ("Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 "
                 "(KHTML, like Gecko) Chrome/124.0 Safari/537.36")

          CANDIDATE_SELECTORS = [
              '[class*="banner"]','[class*="marquee"]','[class*="ticker"]',
              '[class*="notice"]','[class*="announcement"]','[data-component*="banner"]',
              'footer'
          ]
          HINT_KEYWORDS = [
              "availability","cancellation","cancellations","released",
              "until","up until","live system","booking","sold out",
          ]

          def collapse_ws(s): 
              import re
              return re.sub(r"\s+", " ", s or "").strip()

          def looks_like_cookie(t):
              t = t.lower()
              return any(x in t for x in ("cookie","consent","privacy","analytics"))

          def extract_banner_texts(soup):
              candidates = []
              for sel in CANDIDATE_SELECTORS:
                  for node in soup.select(sel):
                      txt = collapse_ws(node.get_text(" ", strip=True))
                      if not txt: continue
                      if looks_like_cookie(txt): continue
                      if len(txt) < 25: continue
                      candidates.append(txt)
              def score(t):
                  tl = t.lower()
                  return sum(1 for k in HINT_KEYWORDS if k in tl)
              uniq, seen = [], set()
              for t in candidates:
                  key = t.lower()
                  if key not in seen:
                      seen.add(key); uniq.append(t)
              uniq.sort(key=score, reverse=True)
              return uniq

          def get_banner_1_and_2():
              r = requests.get(URL, headers={"User-Agent": UA}, timeout=20)
              r.raise_for_status()
              soup = BeautifulSoup(r.text, "lxml")
              texts = extract_banner_texts(soup)
              if not texts:
                  return ["※ 배너 텍스트를 찾지 못했습니다."]
              result = []
              if len(texts) >= 1:
                  result.append("[1] " + texts[0])
              if len(texts) >= 2:
                  result.append("[2] " + texts[1])
              return result

          def send_email(subject, body):
              host = os.environ["SMTP_HOST"]
              port = int(os.environ["SMTP_PORT"])
              user = os.environ["SMTP_USER"]
              pw   = os.environ["SMTP_PASS"]
              mail_from = os.environ.get("MAIL_FROM", user)
              mail_to   = os.environ["MAIL_TO"]

              msg = MIMEText(body, _charset="utf-8")
              msg["Subject"] = subject
              msg["From"] = mail_from
              msg["To"] = mail_to

              ctx = ssl.create_default_context()
              with smtplib.SMTP_SSL(host, port, context=ctx, timeout=30) as server:
                  server.login(user, pw)
                  server.send_message(msg)

          banners = get_banner_1_and_2()
          subject = "오늘의 Onsen 배너 ([1] + [2])"
          body = "\n\n".join(banners) + f"\n\n(출처: {URL})"
          send_email(subject, body)
          print("Email sent with banners:\n", body)
          PYCODE
